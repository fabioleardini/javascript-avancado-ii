{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAAaA,W;;;;;;;kDAEKC,G,EAAK;;AAEf,4BAAG,CAACA,IAAIC,EAAR,EAAY;AACR,kCAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACH;;AAED,+BAAOH,GAAP;AACH;;;wCAEGI,G,EAAK;AAAA;;AAEL,+BAAOC,MAAMD,GAAN,EACEE,IADF,CACO;AAAA,mCAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,yBADP,EAEEM,IAFF,CAEO;AAAA,mCAAON,IAAIQ,IAAJ,EAAP;AAAA,yBAFP,CAAP;AAGH;;;yCAEIJ,G,EAAKK,I,EAAM;AAAA;;AAEZ,+BAAOJ,MAAMD,GAAN,EAAW;AACdM,qCAAS,EAAE,gBAAgB,kBAAlB,EADK;AAEdC,oCAAQ,MAFM;AAGdC,kCAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHQ,yBAAX,EAKNH,IALM,CAKD;AAAA,mCAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,yBALC,CAAP;AAMH","file":"HttpService.js","sourcesContent":["export class HttpService {\n\n    _handleErrors(res) {\n\n        if(!res.ok) {\n            throw new Error(res.statusText);\n        } \n        \n        return res;\n    }\n\n    get(url) {\n\n        return fetch(url)\n                .then(res => this._handleErrors(res))\n                .then(res => res.json());\n    }\n\n    post(url, dado) {\n\n        return fetch(url, {\n            headers: { 'Content-Type': 'application/json' },\n            method: 'post',\n            body: JSON.stringify(dado)\n        })\n        .then(res => this._handleErrors(res));\n    }\n}"]}